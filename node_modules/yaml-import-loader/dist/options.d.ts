import * as YAML from 'js-yaml';
import { Context } from './context';
export interface BaseOptions {
    importRoot: boolean;
    importNested: boolean;
    importKeyword: string;
    importRawKeyword: string;
    output: 'object' | 'json' | 'yaml' | 'yml' | 'raw';
}
export interface InternalOptions extends BaseOptions {
    parser: InternalParserOptions;
}
export interface InternalParserOptions {
    types: (((context: Context) => YAML.Type) | YAML.Type)[];
    schema: YAML.Schema | YAML.Schema[] | undefined;
    allowDuplicate: boolean;
    onWarning?: ((error: YAML.YAMLException) => void);
}
export interface Options extends Partial<BaseOptions> {
    parser?: ParserOptions;
}
export interface ParserOptions extends Partial<InternalParserOptions> {
}
export declare const getOptions: (userOptions: Options, defaultOutput?: "object" | "json" | "yaml" | "yml" | "raw" | undefined) => InternalOptions;
