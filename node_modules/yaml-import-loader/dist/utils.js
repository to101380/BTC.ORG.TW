"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var _this = this;
Object.defineProperty(exports, "__esModule", { value: true });
exports.request = function (uri) { return __awaiter(_this, void 0, void 0, function () {
    var getHttp, getHttps, get;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4, Promise.resolve().then(function () { return require('http'); })];
            case 1:
                getHttp = (_a.sent()).get;
                return [4, Promise.resolve().then(function () { return require('https'); })];
            case 2:
                getHttps = (_a.sent()).get;
                get = uri.startsWith('https://') ? getHttps : getHttp;
                return [2, new Promise(function (resolve, reject) {
                        var result = '';
                        get(uri, function (res) {
                            res.on('data', function (data) { return (result += data); });
                            res.on('end', function () { return resolve(result); });
                            res.on('error', function (err) { return reject(err); });
                        });
                    })];
        }
    });
}); };
exports.readFile = function (path) { return __awaiter(_this, void 0, void 0, function () {
    var nodeReadFile;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4, Promise.resolve().then(function () { return require('fs'); })];
            case 1:
                nodeReadFile = (_a.sent()).readFile;
                return [2, new Promise(function (resolve, reject) {
                        nodeReadFile(path, function (err, data) {
                            if (err)
                                reject(err);
                            else
                                resolve(data.toString());
                        });
                    })];
        }
    });
}); };
exports.resolveNestedPromises = function (value) { return __awaiter(_this, void 0, void 0, function () {
    var elements, result, _i, _a, key, property;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0:
                if (value instanceof Promise)
                    return [2, value];
                if (value instanceof Array) {
                    elements = value.map(function (entry) { return exports.resolveNestedPromises(entry); });
                    return [2, Promise.all(elements)];
                }
                if (!(typeof value === 'object' && value !== null)) return [3, 5];
                result = {};
                _i = 0, _a = Object.keys(value);
                _b.label = 1;
            case 1:
                if (!(_i < _a.length)) return [3, 4];
                key = _a[_i];
                return [4, exports.resolveNestedPromises(value[key])];
            case 2:
                property = _b.sent();
                result[key] = property;
                _b.label = 3;
            case 3:
                _i++;
                return [3, 1];
            case 4: return [2, result];
            case 5: return [2, value];
        }
    });
}); };
